# Grups seleccion segons sexe
table(dataset_final$Sex,useNA='always')
dataset_final.Male<-dataset_final[which(dataset_final$Sex=='male'),]
dataset_final.Female<-dataset_final[which(dataset_final$Sex=='female'),]
# Grups seleccion segons Zona
table(dataset_final$Zona,useNA='always')
dataset_final.ZA<-dataset_final[which(dataset_final$Zona=='A'),]
dataset_final.ZB<-dataset_final[which(dataset_final$Zona=='B'),]
dataset_final.ZC<-dataset_final[which(dataset_final$Zona=='C'),]
dataset_final.ZD<-dataset_final[which(dataset_final$Zona=='D'),]
dataset_final.ZE<-dataset_final[which(dataset_final$Zona=='E'),]
dataset_final.ZF<-dataset_final[which(dataset_final$Zona=='F'),]
dataset_final.ZG<-dataset_final[which(dataset_final$Zona=='G'),]
dataset_final.ZT<-dataset_final[which(dataset_final$Zona=='T'),]
# Grups seleccion segons Tamany familia (FamiliyCat)
table(dataset_final$FamilyCat,useNA='always')
dataset_final.sol<-dataset_final[which(dataset_final$FamilyCat=='sol'),]
dataset_final.petita<-dataset_final[which(dataset_final$FamilyCat=='petita'),]
dataset_final.moderada<-dataset_final[which(dataset_final$FamilyCat=='moderada'),]
dataset_final.gran<-dataset_final[which(dataset_final$FamilyCat=='gran'),]
# Grups seleccion segons preu pagat (PriceCat)
table(dataset_final$PriceCat,useNA='always')
dataset_final.baix<-dataset_final[which(dataset_final$PriceCat=='baix'),]
dataset_final.mig<-dataset_final[which(dataset_final$PriceCat=='mig'),]
dataset_final.alt<-dataset_final[which(dataset_final$PriceCat=='alt'),]
# Grups seleccion segons títol
table(dataset_final$title,useNA='always')
dataset_final.Master<-dataset_final[which(dataset_final$title=='Master'),]
dataset_final.Miss<-dataset_final[which(dataset_final$title=='Miss'),]
dataset_final.Mr<-dataset_final[which(dataset_final$title=='Mr'),]
dataset_final.Mrs<-dataset_final[which(dataset_final$title=='Mrs'),]
dataset_final.Noble<-dataset_final[which(dataset_final$title=='noble'),]
# Grups seleccion segons supervivencia
table(dataset_final$Survived,useNA='always')
dataset_final.Viu<-dataset_final[which(dataset_final$Survived=='0'),]
dataset_final.Mor<-dataset_final[which(dataset_final$Survived=='1'),]
# Price
shapiro.Price<-shapiro.test(dataset_final$Price_Per_Person)
# Age
shapiro.Age_imp<-shapiro.test(dataset_final$Age_imp)
# Price Supervivents
shapiro.Su.Price<-shapiro.test(dataset_final.Viu$Price_Per_Person)
# Price morts
shapiro.Mo.Price<-shapiro.test(dataset_final.Mor$Price_Per_Person)
# Age Supervivents
shapiro.Su.Age_imp<-shapiro.test(dataset_final.Viu$Age_imp)
# Age Morts
shapiro.Mo.Age_imp<-shapiro.test(dataset_final.Mor$Age_imp)
table_res<-matrix(c(round(mean(dataset_final$Price_Per_Person),2),
round(mean(dataset_final$Age_imp),2),
round(mean(dataset_final.Viu$Price_Per_Person),2),
round(mean(dataset_final.Mor$Price_Per_Person),2),
round(mean(dataset_final.Viu$Age_imp),2),
round(mean(dataset_final.Mor$Age_imp),2),
round(median(dataset_final$Price_Per_Person),2),
round(median(dataset_final$Age_imp),2),
round(median(dataset_final.Viu$Price_Per_Person),2),
round(median(dataset_final.Mor$Price_Per_Person),2),
round(median(dataset_final.Viu$Age_imp),2),
round(median(dataset_final.Mor$Age_imp),2),
round(sd(dataset_final$Price_Per_Person),2),
round(sd(dataset_final$Age_imp),2),
round(sd(dataset_final.Viu$Price_Per_Person),2),
round(sd(dataset_final.Mor$Price_Per_Person),2),
round(sd(dataset_final.Viu$Age_imp),2),
round(sd(dataset_final.Mor$Age_imp),2),
shapiro.Price[2],
shapiro.Age_imp[2],
shapiro.Su.Price[2],
shapiro.Mo.Price[2],
shapiro.Su.Price[2],
shapiro.Mo.Price[2]),ncol=4)
colnames(table_res)<-c("Mean","Median","sd","Shapiro-Wilk (p)")
rownames(table_res)<-c("Price","Age","Price Supervivents","Price Morts","Age Supervivents","Age Morts")
table_res<-as.table(table_res)
knitr::kable(table_res, caption = "Resultats de les distribucions de les variables contínues'.")%>%
kable_styling(latex_options="scale_down")
# Use semi-transparent fill
p_survived<-ggplot(dataset_final, aes(x=Price_Per_Person, fill=Survived)) +
geom_density(alpha=0.4)+ geom_vline(xintercept = 9, linetype="dashed",
color = "red", size=0.5) +
geom_density(alpha=0.4)+ geom_vline(xintercept = 18, linetype="dashed",
color = "red", size=0.5)
p_priceperson
set.seed(1912)
dataset_train_random <- dataset_train[sample(nrow(dataset_train)),]
str(dataset_train_random)
set.seed(1912)
y <- dataset_train_random[,20]
knitr::opts_chunk$set(echo = TRUE)
#Càrrega de llibreries
library("readr")
library("stringr")
library(kableExtra)
library(tibble)
library(dplyr)
library(ggplot2)
library(plyr)
library(ggpubr)
table<-matrix(c("PassangerID","Survived","Pclass","Name","Sex","Age","SibSp","Parch","Ticket","Fare","Cabin","Embarked","Número identificador del passatger","Enter que indica si el passatger va sobreviure l'enfonsament o no","Enter que indica el tipus de tiquet del passatger","Títol/Nom del passatger","Sexe del passatger","Edat del passatger (anys)","Número de cònjuges i germans del passatger a bord","Número de pares i fills del passatger a bord","Número del tiquet del passatger","Preu pagat/Tarifa del viatge","Número de cabina","Port en el que ha embarcat el passatger","","0 = No, 1 = Sí","1 = 1a classe, 2 = 2a classe, 3 = 3a classe","","","","","","","","","C = Cherbourg, Q = Queenstown, S = Southampton"),ncol=3)
colnames(table)<-c("Variables","Definició","Codificació")
rownames(table)<-c("","","","","","","","","","","","")
table_variables<-as.table(table)
table_variables
knitr::kable(table_variables, caption = "Data diccionary: resum de les variables del dataset 'Titanic: Machine Learning from Disaster'.")%>%
kable_styling(latex_options="scale_down")
train_raw <- read.csv("data/train.csv", sep=',', stringsAsFactors = FALSE)
test_raw <- read.csv("data/test.csv", sep=',', stringsAsFactors = FALSE)
test_class_raw <- read.csv("data/gender_submission.csv", sep=',', stringsAsFactors = FALSE)
head(train_raw)
head(test_raw)
head(test_class_raw)
train_predictions<-train_raw[,c("PassengerId","Survived")]
train_raw<-train_raw[,-2]
# Comprovem que les dimensions del dataset siguin les esperades
dim(train_raw)
# Comprovem en quina classe es troben les variables
sapply(train_raw,class)
# Comprovem l'estructura
str(train_raw)
# Inspeccionem alguns parametres bàsics
summary(train_raw)
# Inspeccionem les dades
glimpse(train_raw)
# Comprovem que les dimensions del dataset siguin les esperades
dim(test_raw)
# Comprovem en quina classe es troben les variables
sapply(test_raw,class)
# Comprovem l'estructura
str(test_raw)
# Inspeccionem alguns parametres bàsics
summary(test_raw)
# Inspeccionem les dades
glimpse(test_raw)
head(train_raw)
head(test_raw)
dataset<-rbind(train_raw,test_raw)
head(dataset)
dim(dataset)
dataset <- within(dataset, {
Pclass <- factor(Pclass)
Sex <- factor(Sex)
Age <- as.integer(Age)
Embarked <- factor(Embarked)
})
# Inspeccionem les dades
glimpse(dataset)
has_na <- function(dades) {
no_na <- TRUE
for (i in names(dades)) {
a <- sum(is.na(dades[[i]]))
if (a != 0) {
no_na <- FALSE
print(paste("La variable ", i, " té ", a, " valors nul"))
}
else if (a == 0 & is.character(dades[[i]])) {
b <- length(dades[[i]][which(dades[[i]]=="")])
if (b != 0) {
no_na <- FALSE
print(paste("La variable ", i, " té ", b, " valors buits"))
}
}
}
if (no_na) {
print("No hi ha cap variable amb valors nul")
}
}
has_na(dataset)
# Observant les dades veiem que la variable 'Embarked' també té 2 valors buits no identificats amb la funció que hem definit.
table(dataset$Embarked,useNA='always')
# Aquests es troben en el passatger número 62 i 830
dataset[which(dataset$Embarked==""),]
dataset[62,]$Embarked<-'S'
dataset[830,]$Embarked<-'S'
table(dataset$Embarked,useNA='always')
# Aquests es troba en el passatger número 1044
dataset[which(is.na(dataset$Fare)),]
dataset[1044,]$Fare<-mean(dataset[which(dataset$Pclass==3&dataset$SibSp==0&dataset$Parch==0),]$Fare,na.rm = T)
dataset[1044,]$Fare
dataset.maleC1Parch0<-dataset[which(dataset$Sex=='male'&dataset$Pclass=='1'&dataset$Parch<1),]
dataset.maleC1Parch1<-dataset[which(dataset$Sex=='male'&dataset$Pclass=='1'&dataset$Parch>=1),]
dataset.maleC2Parch0<-dataset[which(dataset$Sex=='male'&dataset$Pclass=='2'&dataset$Parch<1),]
dataset.maleC2Parch1<-dataset[which(dataset$Sex=='male'&dataset$Pclass=='2'&dataset$Parch>=1),]
dataset.maleC3Parch0<-dataset[which(dataset$Sex=='male'&dataset$Pclass=='3'&dataset$Parch<1),]
dataset.maleC3Parch1<-dataset[which(dataset$Sex=='male'&dataset$Pclass=='3'&dataset$Parch>=1),]
dataset.femaleC1Parch0<-dataset[which(dataset$Sex=='female'&dataset$Pclass=='1'&dataset$Parch<1),]
dataset.femaleC1Parch1<-dataset[which(dataset$Sex=='female'&dataset$Pclass=='1'&dataset$Parch>=1),]
dataset.femaleC2Parch0<-dataset[which(dataset$Sex=='female'&dataset$Pclass=='2'&dataset$Parch<1),]
dataset.femaleC2Parch1<-dataset[which(dataset$Sex=='female'&dataset$Pclass=='2'&dataset$Parch>=1),]
dataset.femaleC3Parch0<-dataset[which(dataset$Sex=='female'&dataset$Pclass=='3'&dataset$Parch<1),]
dataset.femaleC3Parch1<-dataset[which(dataset$Sex=='female'&dataset$Pclass=='3'&dataset$Parch>=1),]
# Comprovem que les particions estan bé
nrow(dataset.maleC1Parch0)+
nrow(dataset.maleC1Parch1)+
nrow(dataset.maleC2Parch0)+
nrow(dataset.maleC2Parch1)+
nrow(dataset.maleC3Parch0)+
nrow(dataset.maleC3Parch1)+
nrow(dataset.femaleC1Parch0)+
nrow(dataset.femaleC1Parch1)+
nrow(dataset.femaleC2Parch0)+
nrow(dataset.femaleC2Parch1)+
nrow(dataset.femaleC3Parch0)+
nrow(dataset.femaleC3Parch1)
#maleC1Parch0
age_mean1 <- mean(dataset.maleC1Parch0$Age, na.rm = T)
age_median1 <- median(dataset.maleC1Parch0$Age, na.rm = T)
p_maleC1Parch0<-ggplot(dataset.maleC1Parch0, aes(Age)) +
geom_density(fill = 'orchid', alpha =0.7) +
geom_vline(aes(xintercept = age_mean1, color = 'mean'), linetype = 5) +
geom_vline(aes(xintercept = age_median1, color = 'median'), linetype = 5) +
scale_color_manual(name = "stats", values = c(mean = 'indianred', median = 'steelblue')) +
ggtitle(label ="maleC1Parch0")
#maleC1Parch1
age_mean2 <- mean(dataset.maleC1Parch1$Age, na.rm = T)
age_median2 <- median(dataset.maleC1Parch1$Age, na.rm = T)
p_maleC1Parch1<-ggplot(dataset.maleC1Parch1, aes(Age)) +
geom_density(fill = 'orchid', alpha =0.7) +
geom_vline(aes(xintercept = age_mean2, color = 'mean'), linetype = 5) +
geom_vline(aes(xintercept = age_median2, color = 'median'), linetype = 5) +
scale_color_manual(name = "stats", values = c(mean = 'indianred', median = 'steelblue')) +
ggtitle(label ="maleC1Parch1")
#maleC2Parch0
age_mean3 <- mean(dataset.maleC2Parch0$Age, na.rm = T)
age_median3 <- median(dataset.maleC2Parch0$Age, na.rm = T)
p_maleC2Parch0<-ggplot(dataset.maleC2Parch0, aes(Age)) +
geom_density(fill = 'orchid', alpha =0.7) +
geom_vline(aes(xintercept = age_mean3, color = 'mean'), linetype = 5) +
geom_vline(aes(xintercept = age_median3, color = 'median'), linetype = 5) +
scale_color_manual(name = "stats", values = c(mean = 'indianred', median = 'steelblue')) +
ggtitle(label ="maleC2Parch0")
#maleC2Parch1
age_mean4 <- mean(dataset.maleC2Parch1$Age, na.rm = T)
age_median4 <- median(dataset.maleC2Parch1$Age, na.rm = T)
p_maleC2Parch1<-ggplot(dataset.maleC2Parch1, aes(Age)) +
geom_density(fill = 'orchid', alpha =0.7) +
geom_vline(aes(xintercept = age_mean4, color = 'mean'), linetype = 5) +
geom_vline(aes(xintercept = age_median4, color = 'median'), linetype = 5) +
scale_color_manual(name = "stats", values = c(mean = 'indianred', median = 'steelblue')) +
ggtitle(label ="maleC2Parch1")
#maleC3Parch0
age_mean5 <- mean(dataset.maleC3Parch0$Age, na.rm = T)
age_median5 <- median(dataset.maleC3Parch0$Age, na.rm = T)
p_maleC3Parch0<-ggplot(dataset.maleC3Parch0, aes(Age)) +
geom_density(fill = 'orchid', alpha =0.7) +
geom_vline(aes(xintercept = age_mean5, color = 'mean'), linetype = 5) +
geom_vline(aes(xintercept = age_median5, color = 'median'), linetype = 5) +
scale_color_manual(name = "stats", values = c(mean = 'indianred', median = 'steelblue')) +
ggtitle(label ="maleC3Parch0")
#maleC3Parch1
age_mean6 <- mean(dataset.maleC3Parch1$Age, na.rm = T)
age_median6 <- median(dataset.maleC3Parch1$Age, na.rm = T)
p_maleC3Parch1<-ggplot(dataset.maleC3Parch1, aes(Age)) +
geom_density(fill = 'orchid', alpha =0.7) +
geom_vline(aes(xintercept = age_mean6, color = 'mean'), linetype = 5) +
geom_vline(aes(xintercept = age_median6, color = 'median'), linetype = 5) +
scale_color_manual(name = "stats", values = c(mean = 'indianred', median = 'steelblue')) +
ggtitle(label ="maleC3Parch1")
#femaleC1Parch0
age_mean7 <- mean(dataset.femaleC1Parch0$Age, na.rm = T)
age_median7 <- median(dataset.femaleC1Parch0$Age, na.rm = T)
p_femaleC1Parch0<-ggplot(dataset.femaleC1Parch0, aes(Age)) +
geom_density(fill = 'orchid', alpha =0.7) +
geom_vline(aes(xintercept = age_mean7, color = 'mean'), linetype = 5) +
geom_vline(aes(xintercept = age_median7, color = 'median'), linetype = 5) +
scale_color_manual(name = "stats", values = c(mean = 'indianred', median = 'steelblue')) +
ggtitle(label ="femaleC1Parch0")
#femaleC1Parch1
age_mean8 <- mean(dataset.femaleC1Parch1$Age, na.rm = T)
age_median8 <- median(dataset.femaleC1Parch1$Age, na.rm = T)
p_femaleC1Parch1<-ggplot(dataset.femaleC1Parch1, aes(Age)) +
geom_density(fill = 'orchid', alpha =0.7) +
geom_vline(aes(xintercept = age_mean8, color = 'mean'), linetype = 5) +
geom_vline(aes(xintercept = age_median8, color = 'median'), linetype = 5) +
scale_color_manual(name = "stats", values = c(mean = 'indianred', median = 'steelblue')) +
ggtitle(label ="femaleC1Parch1")
#femaleC2Parch0
age_mean9 <- mean(dataset.femaleC2Parch0$Age, na.rm = T)
age_median9 <- median(dataset.femaleC2Parch0$Age, na.rm = T)
p_femaleC2Parch0<-ggplot(dataset.femaleC2Parch0, aes(Age)) +
geom_density(fill = 'orchid', alpha =0.7) +
geom_vline(aes(xintercept = age_mean9, color = 'mean'), linetype = 5) +
geom_vline(aes(xintercept = age_median9, color = 'median'), linetype = 5) +
scale_color_manual(name = "stats", values = c(mean = 'indianred', median = 'steelblue')) +
ggtitle(label ="femaleC2Parch0")
#femaleC2Parch1
age_mean10 <- mean(dataset.femaleC2Parch1$Age, na.rm = T)
age_median10 <- median(dataset.femaleC2Parch1$Age, na.rm = T)
p_femaleC2Parch1<-ggplot(dataset.femaleC2Parch1, aes(Age)) +
geom_density(fill = 'orchid', alpha =0.7) +
geom_vline(aes(xintercept = age_mean10, color = 'mean'), linetype = 5) +
geom_vline(aes(xintercept = age_median10, color = 'median'), linetype = 5) +
scale_color_manual(name = "stats", values = c(mean = 'indianred', median = 'steelblue')) +
ggtitle(label ="femaleC2Parch1")
#femaleC3Parch0
age_mean11 <- mean(dataset.femaleC3Parch0$Age, na.rm = T)
age_median11 <- median(dataset.femaleC3Parch0$Age, na.rm = T)
p_femaleC3Parch0<-ggplot(dataset.femaleC3Parch0, aes(Age)) +
geom_density(fill = 'orchid', alpha =0.7) +
geom_vline(aes(xintercept = age_mean11, color = 'mean'), linetype = 5) +
geom_vline(aes(xintercept = age_median11, color = 'median'), linetype = 5) +
scale_color_manual(name = "stats", values = c(mean = 'indianred', median = 'steelblue')) +
ggtitle(label ="femaleC3Parch0")
#femaleC3Parch1
age_mean12 <- mean(dataset.femaleC3Parch1$Age, na.rm = T)
age_median12 <- median(dataset.femaleC3Parch1$Age, na.rm = T)
p_femaleC3Parch1<-ggplot(dataset.femaleC3Parch1, aes(Age)) +
geom_density(fill = 'orchid', alpha =0.7) +
geom_vline(aes(xintercept = age_mean12, color = 'mean'), linetype = 5) +
geom_vline(aes(xintercept = age_median12, color = 'median'), linetype = 5) +
scale_color_manual(name = "stats", values = c(mean = 'indianred', median = 'steelblue')) +
ggtitle(label ="femaleC3Parch1")
figure_Ages <- ggarrange(p_maleC1Parch0,p_maleC1Parch1,p_maleC2Parch0,p_maleC2Parch1,p_maleC3Parch0,p_maleC3Parch1,p_femaleC1Parch0,p_femaleC1Parch1,p_femaleC2Parch0,p_femaleC2Parch1,p_femaleC3Parch0,p_femaleC3Parch1, ncol = 3, nrow = 4)
figure_Ages
impute_age <- function (x) {
x[is.na(x)] <- median(x, na.rm = T)
return(x)
}
impute_age(dataset.maleC1Parch0$Age)
dataset.maleC1Parch0$Age<-impute_age(dataset.maleC1Parch0$Age)
dataset.maleC1Parch1$Age<-impute_age(dataset.maleC1Parch1$Age)
dataset.maleC2Parch0$Age<-impute_age(dataset.maleC2Parch0$Age)
dataset.maleC2Parch1$Age<-impute_age(dataset.maleC2Parch1$Age)
dataset.maleC3Parch0$Age<-impute_age(dataset.maleC3Parch0$Age)
dataset.maleC3Parch1$Age<-impute_age(dataset.maleC3Parch1$Age)
dataset.femaleC1Parch0$Age<-impute_age(dataset.femaleC1Parch0$Age)
dataset.femaleC1Parch1$Age<-impute_age(dataset.femaleC1Parch1$Age)
dataset.femaleC2Parch0$Age<-impute_age(dataset.femaleC2Parch0$Age)
dataset.femaleC2Parch1$Age<-impute_age(dataset.femaleC2Parch1$Age)
dataset.femaleC3Parch0$Age<-impute_age(dataset.femaleC3Parch0$Age)
dataset.femaleC3Parch1$Age<-impute_age(dataset.femaleC3Parch1$Age)
dataset_imputed<-rbind(dataset.maleC1Parch0,dataset.maleC1Parch1,dataset.maleC2Parch0,dataset.maleC2Parch1,dataset.maleC3Parch0,dataset.maleC3Parch1,dataset.femaleC1Parch0,dataset.femaleC1Parch1,dataset.femaleC2Parch0,dataset.femaleC2Parch1,dataset.femaleC3Parch0,dataset.femaleC3Parch1)
dataset_imputed<-dataset_imputed[,c('PassengerId','Age')]
names(dataset_imputed)[2]<-'Age_imp'
dataset<-merge(dataset,dataset_imputed,by = 'PassengerId')
# Extreiem el 'titol' de cada passatger. Com que el format dels nomes sempre es el mateix podem seguir una estructura per trobar-los
dataset$title <- str_sub(dataset$Name, str_locate(dataset$Name, ",")[ , 1] + 2, str_locate(dataset$Name, "\\.")[ , 1] - 1)
# combines els títols dels passatgers en grups segons si considerem que formen part de la noblesa (i.e. tenen algun títol, o no)
# Titols nobles per homes
names_noblesa <- c("Capt", "Col", "Don", "Dr", "Jonkheer", "Major", "Rev", "Sir","Lady", "Mlle", "Mme", "Ms", "the Countess", "Dona")
dataset$title[dataset$title %in% names_noblesa] <- "noble"
dataset$title<-factor(dataset$title)
# Comprobem el resultat final
table(dataset$title)
Zona <- dataset %>%
select(Cabin) %>%
mutate(Zona = factor(str_extract(Cabin, pattern = "^.")))
dataset$Zona<-Zona$Zona
#Creem la variable 'Familiy_name"
dataset$Family_name <- str_replace(string = dataset$Name, pattern = ",.*", replacement = "")
#Visualitzem les dades
dataset %>%
select(Name, Family_name) %>%
head(10)
#Ceem la variable 'Family_size' (sumem 1 per assegurar-nos de que el passatger també es té en compte en la seva propia familia)
dataset <- dataset %>%
mutate(Family_size = SibSp + Parch + 1)
#Visualitzem les dades
dataset %>%
select(Family_name, SibSp, Parch, Family_size) %>%
arrange(Family_name)%>%
head(10)
dataset <- dataset %>%
mutate(FamilyCat = factor(case_when(Family_size == 1 ~ 'sol'
,Family_size > 1 & Family_size < 5 ~ 'petita'
,Family_size >= 5 & Family_size < 7 ~ 'moderada'
,Family_size >= 7 ~ 'gran')))
dataset$Price_Per_Person<-dataset$Fare/dataset$Family_size
# Use semi-transparent fill
p_fare<-ggplot(dataset[which(dataset$Fare<100),], aes(x=Fare, fill=Pclass)) +
geom_density(alpha=0.4)
p_fare
# Use semi-transparent fill
p_priceperson<-ggplot(dataset[which(dataset$Price_Per_Person<100),], aes(x=Price_Per_Person, fill=Pclass)) +
geom_density(alpha=0.4)+ geom_vline(xintercept = 9, linetype="dashed",
color = "red", size=0.5) +
geom_density(alpha=0.4)+ geom_vline(xintercept = 18, linetype="dashed",
color = "red", size=0.5)
p_priceperson
has_na(dataset)
table(dataset$Embarked,useNA='always')
summary(dataset$Age_imp)
dataset["AgeCat"] <- cut(dataset$Age_imp, breaks = c(0,5,10,15,20,25,30,35,40,45,50,55,60,65,70,75,80,85), labels = c("0-5","5-10","10-15","15-20","20-25","25-30","30-35","35-40","40-45","45-50","50-55","55-60","60-65","65-70","70-75","75-80","80-85"))
summary(dataset$Price_Per_Person)
dataset["PriceCat"] <- cut(dataset$Price_Per_Person, breaks = c(-1,9,18,513), labels = c("baix","mig","alt"))
mostrar_diag_caixa <- function(dades, variables_numeriques) {
mida <- ceiling(sqrt(length(variables_numeriques)))
par(mfrow=c(2,2))
for (i in variables_numeriques) {
boxplot(dades[[i]], main=i, horizontal = TRUE)
}
}
deteccio_valors_atipics <- function(dades,variables_numeriques) {
for (i in variables_numeriques) {
valors_atipics <- boxplot.stats(dades[[i]])$out
if (length(valors_atipics != 0)) {
print(paste("La variable", i, "té els valors atípics: "))
print(valors_atipics)
}
}
}
mostrar_diag_caixa(dataset,c("Age_imp","SibSp","Parch","Price_Per_Person","Family_size"))
deteccio_valors_atipics(dataset,c("Age_imp","SibSp","Parch","Price_Per_Person","Family_size"))
dataset_net<-dataset[,c("PassengerId","Pclass","Sex","Zona","FamilyCat","Price_Per_Person","PriceCat","Age_imp","title")]
# El dataset final
dataset_final<-merge(dataset_net,train_predictions,by = "PassengerId", all = T)
# Convertim la variable 'Survived' en categorica
dataset_final$Survived<-factor(dataset_final$Survived)
write.csv(dataset_final,"dataset_titanic_clean.csv")
glimpse(dataset_final)
# El dataset final d'entrenament
dataset_train<-dataset_final[which(!(is.na(dataset_final$Survived))),]
dim(dataset_train)
# El dataset final de test
dataset_test<-dataset_final[which(is.na(dataset_final$Survived)),]
dim(dataset_test)
# Grups seleccion segons classe (Pclass)
table(dataset_final$Pclass,useNA='always')
dataset_final.Class1<-dataset_final[which(dataset_final$Pclass=='1'),]
dataset_final.Class2<-dataset_final[which(dataset_final$Pclass=='2'),]
dataset_final.Class3<-dataset_final[which(dataset_final$Pclass=='3'),]
# Grups seleccion segons sexe
table(dataset_final$Sex,useNA='always')
dataset_final.Male<-dataset_final[which(dataset_final$Sex=='male'),]
dataset_final.Female<-dataset_final[which(dataset_final$Sex=='female'),]
# Grups seleccion segons Zona
table(dataset_final$Zona,useNA='always')
dataset_final.ZA<-dataset_final[which(dataset_final$Zona=='A'),]
dataset_final.ZB<-dataset_final[which(dataset_final$Zona=='B'),]
dataset_final.ZC<-dataset_final[which(dataset_final$Zona=='C'),]
dataset_final.ZD<-dataset_final[which(dataset_final$Zona=='D'),]
dataset_final.ZE<-dataset_final[which(dataset_final$Zona=='E'),]
dataset_final.ZF<-dataset_final[which(dataset_final$Zona=='F'),]
dataset_final.ZG<-dataset_final[which(dataset_final$Zona=='G'),]
dataset_final.ZT<-dataset_final[which(dataset_final$Zona=='T'),]
# Grups seleccion segons Tamany familia (FamiliyCat)
table(dataset_final$FamilyCat,useNA='always')
dataset_final.sol<-dataset_final[which(dataset_final$FamilyCat=='sol'),]
dataset_final.petita<-dataset_final[which(dataset_final$FamilyCat=='petita'),]
dataset_final.moderada<-dataset_final[which(dataset_final$FamilyCat=='moderada'),]
dataset_final.gran<-dataset_final[which(dataset_final$FamilyCat=='gran'),]
# Grups seleccion segons preu pagat (PriceCat)
table(dataset_final$PriceCat,useNA='always')
dataset_final.baix<-dataset_final[which(dataset_final$PriceCat=='baix'),]
dataset_final.mig<-dataset_final[which(dataset_final$PriceCat=='mig'),]
dataset_final.alt<-dataset_final[which(dataset_final$PriceCat=='alt'),]
# Grups seleccion segons títol
table(dataset_final$title,useNA='always')
dataset_final.Master<-dataset_final[which(dataset_final$title=='Master'),]
dataset_final.Miss<-dataset_final[which(dataset_final$title=='Miss'),]
dataset_final.Mr<-dataset_final[which(dataset_final$title=='Mr'),]
dataset_final.Mrs<-dataset_final[which(dataset_final$title=='Mrs'),]
dataset_final.Noble<-dataset_final[which(dataset_final$title=='noble'),]
# Grups seleccion segons supervivencia
table(dataset_final$Survived,useNA='always')
dataset_final.Viu<-dataset_final[which(dataset_final$Survived=='0'),]
dataset_final.Mor<-dataset_final[which(dataset_final$Survived=='1'),]
# Price
shapiro.Price<-shapiro.test(dataset_final$Price_Per_Person)
# Age
shapiro.Age_imp<-shapiro.test(dataset_final$Age_imp)
# Price Supervivents
shapiro.Su.Price<-shapiro.test(dataset_final.Viu$Price_Per_Person)
# Price morts
shapiro.Mo.Price<-shapiro.test(dataset_final.Mor$Price_Per_Person)
# Age Supervivents
shapiro.Su.Age_imp<-shapiro.test(dataset_final.Viu$Age_imp)
# Age Morts
shapiro.Mo.Age_imp<-shapiro.test(dataset_final.Mor$Age_imp)
table_res<-matrix(c(round(mean(dataset_final$Price_Per_Person),2),
round(mean(dataset_final$Age_imp),2),
round(mean(dataset_final.Viu$Price_Per_Person),2),
round(mean(dataset_final.Mor$Price_Per_Person),2),
round(mean(dataset_final.Viu$Age_imp),2),
round(mean(dataset_final.Mor$Age_imp),2),
round(median(dataset_final$Price_Per_Person),2),
round(median(dataset_final$Age_imp),2),
round(median(dataset_final.Viu$Price_Per_Person),2),
round(median(dataset_final.Mor$Price_Per_Person),2),
round(median(dataset_final.Viu$Age_imp),2),
round(median(dataset_final.Mor$Age_imp),2),
round(sd(dataset_final$Price_Per_Person),2),
round(sd(dataset_final$Age_imp),2),
round(sd(dataset_final.Viu$Price_Per_Person),2),
round(sd(dataset_final.Mor$Price_Per_Person),2),
round(sd(dataset_final.Viu$Age_imp),2),
round(sd(dataset_final.Mor$Age_imp),2),
shapiro.Price[2],
shapiro.Age_imp[2],
shapiro.Su.Price[2],
shapiro.Mo.Price[2],
shapiro.Su.Price[2],
shapiro.Mo.Price[2]),ncol=4)
colnames(table_res)<-c("Mean","Median","sd","Shapiro-Wilk (p)")
rownames(table_res)<-c("Price","Age","Price Supervivents","Price Morts","Age Supervivents","Age Morts")
table_res<-as.table(table_res)
knitr::kable(table_res, caption = "Resultats de les distribucions de les variables contínues'.")%>%
kable_styling(latex_options="scale_down")
# Use semi-transparent fill
p_survived<-ggplot(dataset_final, aes(x=Price_Per_Person, fill=Survived)) +
geom_density(alpha=0.4)+ geom_vline(xintercept = 9, linetype="dashed",
color = "red", size=0.5) +
geom_density(alpha=0.4)+ geom_vline(xintercept = 18, linetype="dashed",
color = "red", size=0.5)
p_priceperson
set.seed(1912)
dataset_train_random <- dataset_train[sample(nrow(dataset_train)),]
str(dataset_train_random)
set.seed(1912)
y <- dataset_train_random[,20]
summary(dataset_train_random)
str(dataset_train_random)
